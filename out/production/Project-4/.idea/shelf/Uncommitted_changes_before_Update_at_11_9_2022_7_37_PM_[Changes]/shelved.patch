Index: ShoppingCart.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.ArrayList;\r\n\r\npublic class ShoppingCart {\r\n    ArrayList<Product> cartItems;\r\n\r\n    public ShoppingCart(ArrayList<Product> cartItems) {\r\n        this.cartItems = cartItems;\r\n    }\r\n\r\n    public ArrayList<Product> getCartItems() {\r\n        return cartItems;\r\n    }\r\n\r\n    public void setCartItems(ArrayList<Product> cartItems) {\r\n        this.cartItems = cartItems;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"ShoppingCart{\" +\r\n                \"cartItems=\" + cartItems +\r\n                '}';\r\n    }\r\n\r\n    //Method to find the total cost of items in a shopping cart.\r\n    public double totalCost() {\r\n        double totalCost = 0;\r\n        for (Product cartItem : cartItems) {\r\n            double itemCost = cartItem.getQuantity() * cartItem.getPrice(); //Cost of each item.\r\n            totalCost += itemCost;\r\n        }\r\n        return totalCost; //Cost of all the items in the cart\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ShoppingCart.java b/ShoppingCart.java
--- a/ShoppingCart.java	(revision 448a9bab88b9f43d299a0ea2acdf46bb3a2094ba)
+++ b/ShoppingCart.java	(date 1668039459859)
@@ -31,4 +31,4 @@
         }
         return totalCost; //Cost of all the items in the cart
     }
-}
+}
\ No newline at end of file
Index: Market.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.ArrayList;\r\nimport java.io.*;\r\n\r\npublic class Market {\r\n\r\n    private ArrayList<Product> products;\r\n    private String name;\r\n    // checks if market already exists in markets.txt. throws MarketExistsException if it does\r\n    // if markets.txt does not exist, creates new markets.txt file with itself as the first market name\r\n    // creates its own market file of the format \"name\" + \" Market.txt\"\r\n    // prints each product to the file, in the form name;;description;;store;;price;;quantity\r\n    public Market(String name, ArrayList<Product> products) throws IOException, MarketExistsException {\r\n        this.products = products;\r\n        this.name = name;\r\n        File f = new File(\"Markets.txt\");\r\n        ArrayList<String> markets = new ArrayList<String>();\r\n        try {\r\n            FileReader fr = new FileReader(f);\r\n            BufferedReader bfr = new BufferedReader(fr);\r\n            String line = bfr.readLine();\r\n            while (line != null) {\r\n                if (line.equals(name)) {\r\n                    throw new MarketExistsException(name);\r\n                }\r\n                markets.add(line);\r\n                line = bfr.readLine();\r\n            }\r\n            bfr.close();\r\n            FileOutputStream fos = new FileOutputStream(f);\r\n            PrintWriter pw = new PrintWriter(fos);\r\n            for (int i = 0; i < markets.size(); i++) {\r\n                pw.println(markets.get(i));\r\n            }\r\n            pw.println(name);\r\n            pw.close();\r\n        } catch (FileNotFoundException e) {\r\n            f.createNewFile();\r\n            FileOutputStream fos = new FileOutputStream(f);\r\n            PrintWriter pw = new PrintWriter(fos);\r\n            pw.println(name);\r\n            pw.close();\r\n        }\r\n        String fileName = name + \" Market.txt\";\r\n        File market = new File(fileName);\r\n        FileOutputStream fos = new FileOutputStream(market);\r\n        PrintWriter pw = new PrintWriter(fos);\r\n        for (int i = 0; i < products.size(); i++) {\r\n            Product p = products.get(i);\r\n            String product = p.getName() + \";;\" + p.getDescription() + \";;\" + p.getStore() + \";;\" + p.getPrice() + \";;\" + p.getQuantity();\r\n            pw.println(product);\r\n        }\r\n        pw.close();\r\n    }\r\n\r\n\r\n    public ArrayList<Product> getProducts() {\r\n        return products;\r\n    }\r\n\r\n    public void setProducts(ArrayList<Product> products) throws FileNotFoundException {\r\n        this.products = products;\r\n        String fileName = this.name + \" Market.txt\";\r\n        File market = new File(fileName);\r\n        FileOutputStream fos = new FileOutputStream(market);\r\n        PrintWriter pw = new PrintWriter(fos);\r\n        for (int i = 0; i < products.size(); i++) {\r\n            Product p = products.get(i);\r\n            String product = p.getName() + \";;\" + p.getDescription() + \";;\" + p.getStore() + \";;\" + p.getPrice() + \";;\" + p.getQuantity();\r\n            pw.println(product);\r\n        }\r\n        pw.close();\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"Store{\" + \"name=\" + name +\r\n                \", products=\" + products +\r\n                '}';\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Market.java b/Market.java
--- a/Market.java	(revision 448a9bab88b9f43d299a0ea2acdf46bb3a2094ba)
+++ b/Market.java	(date 1668039952227)
@@ -12,11 +12,10 @@
     public Market(String name, ArrayList<Product> products) throws IOException, MarketExistsException {
         this.products = products;
         this.name = name;
-        File f = new File("Markets.txt");
         ArrayList<String> markets = new ArrayList<String>();
+        File f = new File("Markets.txt");
         try {
-            FileReader fr = new FileReader(f);
-            BufferedReader bfr = new BufferedReader(fr);
+            BufferedReader bfr = new BufferedReader(new FileReader(f));
             String line = bfr.readLine();
             while (line != null) {
                 if (line.equals(name)) {
